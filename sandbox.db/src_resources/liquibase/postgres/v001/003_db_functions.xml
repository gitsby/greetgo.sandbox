<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">




<changeSet id="create-filtered-table" author="arpanetus">
    <sql endDelimiter=";;"><![CDATA[
            create or replace function filtered_names(filter_type varchar, filter_text varchar)
        returns table(id int, surname varchar(255), name varchar(255), patronymic varchar(255), birthDate Date, charm integer)
        as $$ begin return query select
        cl.id, cl.surname, cl.name, cl.patronymic, cl.birthDate, cl.charm  from client as cl
        where case
              when filter_type='NAME' then  cl.name ilike filter_text
              when filter_type='SURNAME' then  cl.surname ilike filter_text
              when filter_type='PATRONYMIC' then  cl.patronymic ilike filter_text
              else cl.name like filter_text
              end;
        end; $$
        language plpgsql;
        ]]>

    </sql>
</changeSet>

<changeSet id="create-account-selection" author="arpanetus">
    <sql endDelimiter=";;"><![CDATA[
        create or replace function filtered_accounts()
        returns TABLE(client integer, totalbalance double precision, minbalance double precision, maxbalance double precision)
        language plpgsql
        as $$
        begin return query select
                     ca.client as client,
                     max(ca.money) as maxBalance,
                     min(ca.money) as minBalance,
                     sum(ca.money) as totalBalance
                   from client_account as ca
                   group by ca.client;
        end;
        $$;
    ]]></sql>
</changeSet>


<changeSet id="create-table-to-view" author="arpanetus">
    <sql endDelimiter=";;"><![CDATA[
create or replace function table_to_view(filter_type character varying, filter_text character varying)
  returns TABLE(id integer, fullname text, age bigint, charm character varying, totalbalance double precision, minbalance double precision, maxbalance double precision)
language plpgsql
as $$
begin return query select
                     cl.id as id,
                     cl.surname||' '||cl.name||' '||cl.patronymic as fullName,
                     cast(extract(epoch from cl.birthDate) as bigint) as age,
                     ch.name as charm,
                     ca.maxBalance as maxBalance, ca.minBalance as minBalance, ca.totalBalance as totalBalance
                   from filtered_names(filter_type, filter_text) as cl
                     left join filtered_accounts() as ca on cl.id = ca.client
                     left join charm as ch on cl.charm = ch.id
                   group by cl.id, ch.name,cl.patronymic,cl.birthDate, cl.name, cl.surname, ca.maxbalance,ca.minbalance, ca.totalbalance;
end;
$$;]]>
    </sql>
</changeSet>

    <!--
    Once God said: if your time is scarce and plsql doesn't want to be your conscious property
    then write some 'Kosteels'.
    So did I.
    -->

    <changeSet id="create-" author="arpanetus">
        <sql endDelimiter=";;"><![CDATA[
create or replace function
        sortedfullNameDesc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
      returns table(
        id int,
        fullName text,
        age bigint,
        charm varchar,
        totalBalance float,
        minBalance float,
        maxBalance float)
      as $$ begin return query
        select
          processed.id as id,
          processed.fullName as fullName,
          processed.age as age,
          processed.charm as charm,
          processed.totalBalance as totalBalance,
          processed.minBalance as minBalance,
          processed.maxBalance as maxBalance
        from (select * from table_to_view(filter_type,filter_text) as ttv
              order by ttv.fullname desc) as processed
        limit limit_number offset skip_number;
      end; $$
      language plpgsql;


      create or replace function
        sortedfullNameAsc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.fullname asc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;


      create or replace function
        sortedAgeDesc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.age desc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;

      create or replace function
        sortedAgeAsc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.age asc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;


      create or replace function
        sortedTotalBalanceDesc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.totalbalance desc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;

      create or replace function
        sortedTotalBalanceAsc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.totalbalance asc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;


      create or replace function
        sortedMinBalanceDesc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.minbalance desc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;

      create or replace function
        sortedMinBalanceAsc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.minbalance asc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;

      create or replace function
        sortedMaxBalanceDesc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.maxbalance desc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;


      create or replace function
        sortedMaxBalanceAsc(
        skip_number int,
        limit_number int,
        filter_type varchar,
        filter_text varchar)
        returns table(
          id int,
          fullName text,
          age bigint,
          charm varchar,
          totalBalance float,
          minBalance float,
          maxBalance float)
      as $$ begin return query
      select
        processed.id as id,
        processed.fullName as fullName,
        processed.age as age,
        processed.charm as charm,
        processed.totalBalance as totalBalance,
        processed.minBalance as minBalance,
        processed.maxBalance as maxBalance
      from (select * from table_to_view(filter_type,filter_text) as ttv
            order by ttv.maxbalance asc) as processed
      limit limit_number offset skip_number;
      end; $$
      language plpgsql;


        ]]>
        </sql>
    </changeSet>


        </databaseChangeLog>











